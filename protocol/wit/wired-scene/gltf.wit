interface gltf {
  use material.{material};
  use mesh.{mesh};
  use node.{node};
  use scene.{scene};

  /// A glTF document.
  /// Can be saved or loaded independently of the rest of the world.
  resource gltf {
    constructor();

    list-materials: func() -> list<material>;
    add-material: func(value: borrow<material>);
    remove-material: func(value: borrow<material>);

    list-meshes: func() -> list<mesh>;
    add-mesh: func(value: borrow<mesh>);
    remove-mesh: func(value: borrow<mesh>);

    list-nodes: func() -> list<node>;
    add-node: func(value: borrow<node>);
    remove-node: func(value: borrow<node>);

    list-scenes: func() -> list<scene>;
    add-scene: func(value: borrow<scene>);
    remove-scene: func(value: borrow<scene>);

    /// The currently loaded scene.
    active-scene: func() -> option<scene>;
    set-active-scene: func(value: option<borrow<scene>>);

    /// The default active scene, used when an asset is first loaded.
    /// If not explicitly set, the first scene will be used.
    default-scene: func() -> option<scene>;
    set-default-scene: func(value: borrow<scene>);
  }
}
