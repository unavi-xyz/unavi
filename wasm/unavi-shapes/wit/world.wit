package unavi:shapes;

world guest {
  include wired:scene/prelude;

  export shapes;
}

interface shapes {
  use wired:math/types.{vec2, vec3};
  use wired:scene/mesh.{mesh};
  use wired:scene/node.{node};

  resource cuboid {
    constructor(size: vec3);

    size: func() -> vec3;
    set-size: func(value: vec3);

    /// Creates a mesh of this shape.
    to-mesh: func() -> mesh;
    /// Creates a node with a mesh of this shape.
    to-node: func() -> node;
    /// Creates a node with a mesh and physics collider of this shape.
    to-physics-node: func() -> node;
  }
}
